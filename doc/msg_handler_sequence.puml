@startuml

title "sequence about sqsd handler"
hide footbox

participant MessageHandler
participant SQS
participant GoRoutine
participant JobTracker
participant Worker

MessageHandler -> MessageHandler : Run()
activate MessageHandler

MessageHandler -> JobTracker : IsWorking()
activate JobTracker
MessageHandler <-- JobTracker : bool
deactivate JobTracker

MessageHandler -> SQS : GetMessages()
activate SQS
MessageHandler <-- SQS : []*sqs.Message
deactivate SQS

loop HandleMessage([]*sqs.Message)
  MessageHandler -> MessageHandler : Newjob(*sqs.Message) *Job
  MessageHandler -> JobTracker : AddJob(*job)
  activate JobTracker

  JobTracker -> JobTracker : CurrentWorkings[job.ID()] = job
  MessageHandler <-- JobTracker : bool
  deactivate JobTracker

  MessageHandler ->> GoRoutine : go HandleMessage(*Job)
  activate GoRoutine
  deactivate MessageHandler
end

GoRoutine -> Worker : <POST Request>
activate Worker
Worker -> Worker : <work hard!>
GoRoutine <-- Worker : <HTTP response>
deactivate Worker
GoRoutine -> SQS : DeleteMessage(*sqs.Message)
activate SQS
GoRoutine <-- SQS
deactivate SQS
GoRoutine -> JobTracker : Delete(*Job)
activate JobTracker
JobTracker -> JobTracker : delete(CurrentWorkings, job.ID())
GoRoutine <-- JobTracker
deactivate JobTracker
deactivate GoRoutine

@enduml